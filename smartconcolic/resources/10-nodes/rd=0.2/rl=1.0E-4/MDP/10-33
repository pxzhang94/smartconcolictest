mdp

module translatedMDP

s : [0..3] init 0;

[rt] s=1 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=3);
[se01] s=1 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=3);
[se012] s=1 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=3);
[se0123] s=1 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=3);
[se01234] s=1 -> 1 :(s'=1);
[se01235] s=1 -> 1 :(s'=1);
[se012356] s=1 -> 1 :(s'=1);
[se0123567] s=1 -> 1 :(s'=1);
[se01235678] s=1 -> 1 :(s'=1);
[se012356789] s=1 -> 1 :(s'=1);

[rt] s=2 -> 0.27243013769656926:(s'=3)+0.7275698623034308:(s'=2);
[se01] s=2 -> 0.27243013769656926:(s'=3)+0.7275698623034308:(s'=2);
[se012] s=2 -> 0.27243013769656926:(s'=3)+0.7275698623034308:(s'=2);
[se0123] s=2 -> 0.27243013769656926:(s'=3)+0.7275698623034308:(s'=2);
[se01234] s=2 -> 1 :(s'=2);
[se01235] s=2 -> 1 :(s'=2);
[se012356] s=2 -> 1 :(s'=2);
[se0123567] s=2 -> 1 :(s'=2);
[se01235678] s=2 -> 1 :(s'=2);
[se012356789] s=2 -> 1 :(s'=2);

[rt] s=0 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=2);
[se01] s=0 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=2);
[se012] s=0 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=2);
[se0123] s=0 -> 0.27243013769656926:(s'=1)+0.7275698623034308:(s'=2);
[se01234] s=0 -> 1 :(s'=0);
[se01235] s=0 -> 1 :(s'=0);
[se012356] s=0 -> 1 :(s'=0);
[se0123567] s=0 -> 1 :(s'=0);
[se01235678] s=0 -> 1 :(s'=0);
[se012356789] s=0 -> 1 :(s'=0);

[rt] s=3 -> 1 :(s'=3);
[se01] s=3 -> 1 :(s'=3);
[se012] s=3 -> 1 :(s'=3);
[se0123] s=3 -> 1 :(s'=3);
[se01234] s=3 -> 1 :(s'=3);
[se01235] s=3 -> 1 :(s'=3);
[se012356] s=3 -> 1 :(s'=3);
[se0123567] s=3 -> 1 :(s'=3);
[se01235678] s=3 -> 1 :(s'=3);
[se012356789] s=3 -> 1 :(s'=3);

endmodule

rewards
[rt] true : 1;
[se01] true : 805.0;
[se012] true : 812.0;
[se0123] true : 1724.0;
[se01234] true : 2458.0;
[se01235] true : 1863.0;
[se012356] true : 2742.0;
[se0123567] true : 2902.0;
[se01235678] true : 3360.0;
[se012356789] true : 3909.0;
endrewards

label "covered" = s = 3;
